(()=>{"use strict";var e={208:(e,t,n)=>{n.d(t,{A:()=>d});var i=n(354),r=n.n(i),o=n(314),a=n.n(o)()(r());a.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap);"]),a.push([e.id,'.indie-flower-regular {\n    font-family: "Indie Flower", cursive;\n    font-weight: 400;\n    font-style: normal;\n  }\n#taskcontainer{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n}\n #containerall{\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n} \n#singlecontainer{\n    box-shadow: 1vh 1vh 1vh black;\n    border-radius: 10%;\n    padding: 1vh;\n    margin: 1vh;\n}\ninput{\n    color: orangered;\n}\nbody{\n    \n    width: 100vw;\n    background-color: rgb(2,0,36);\n\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(67,67,154,1) 35%, rgba(0,212,255,1) 100%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-family: "Indie Flower", cursive;\n    font-weight: 400;\n    font-style: normal;    \n}\n*{\n    font-weight: bold;\n    text-align: center;\n    color:silver;\n}\nbutton{\n    border-radius: 20%;\n    background-color: rgb(2,0,36);\nbackground: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(154,67,67,1) 38%, rgba(0,212,255,1) 100%);\n}\n\n@media only screen and (max-width: 600px){\n    #taskcontainer{\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n    }\n\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AACA;IACI,oCAAoC;IACpC,gBAAgB;IAChB,kBAAkB;EACpB;AACF;IACI,aAAa;IACb,kCAAkC;AACtC;CACC;IACG,uBAAuB;IACvB,mBAAmB;IACnB,aAAa;IACb,sBAAsB;AAC1B;AACA;IACI,6BAA6B;IAC7B,kBAAkB;IAClB,YAAY;IACZ,WAAW;AACf;AACA;IACI,gBAAgB;AACpB;AACA;;IAEI,YAAY;IACZ,6BAA6B;;IAE7B,oGAAoG;IACpG,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;IACnB,oCAAoC;IACpC,gBAAgB;IAChB,kBAAkB;AACtB;AACA;IACI,iBAAiB;IACjB,kBAAkB;IAClB,YAAY;AAChB;AACA;IACI,kBAAkB;IAClB,6BAA6B;AACjC,oGAAoG;AACpG;;AAEA;IACI;QACI,aAAa;QACb,8BAA8B;IAClC;;AAEJ",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap\');\n.indie-flower-regular {\n    font-family: "Indie Flower", cursive;\n    font-weight: 400;\n    font-style: normal;\n  }\n#taskcontainer{\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n}\n #containerall{\n    justify-content: center;\n    align-items: center;\n    display: flex;\n    flex-direction: column;\n} \n#singlecontainer{\n    box-shadow: 1vh 1vh 1vh black;\n    border-radius: 10%;\n    padding: 1vh;\n    margin: 1vh;\n}\ninput{\n    color: orangered;\n}\nbody{\n    \n    width: 100vw;\n    background-color: rgb(2,0,36);\n\n    background: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(67,67,154,1) 35%, rgba(0,212,255,1) 100%);\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    font-family: "Indie Flower", cursive;\n    font-weight: 400;\n    font-style: normal;    \n}\n*{\n    font-weight: bold;\n    text-align: center;\n    color:silver;\n}\nbutton{\n    border-radius: 20%;\n    background-color: rgb(2,0,36);\nbackground: linear-gradient(90deg, rgba(2,0,36,1) 0%, rgba(154,67,67,1) 38%, rgba(0,212,255,1) 100%);\n}\n\n@media only screen and (max-width: 600px){\n    #taskcontainer{\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n    }\n\n}'],sourceRoot:""}]);const d=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",i=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),i&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),i&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,i,r,o){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(i)for(var d=0;d<this.length;d++){var l=this[d][0];null!=l&&(a[l]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);i&&a[u[0]]||(void 0!==o&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=o),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),r&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=r):u[4]="".concat(r)),t.push(u))}},t}},354:e=>{e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(r," */");return[t].concat([o]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function n(e){for(var n=-1,i=0;i<t.length;i++)if(t[i].identifier===e){n=i;break}return n}function i(e,i){for(var o={},a=[],d=0;d<e.length;d++){var l=e[d],c=i.base?l[0]+i.base:l[0],u=o[c]||0,s="".concat(c," ").concat(u);o[c]=u+1;var p=n(s),m={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==p)t[p].references++,t[p].updater(m);else{var A=r(m,i);i.byIndex=d,t.splice(d,0,{identifier:s,updater:A,references:1})}a.push(s)}return a}function r(e,t){var n=t.domAPI(t);return n.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,r){var o=i(e=e||[],r=r||{});return function(e){e=e||[];for(var a=0;a<o.length;a++){var d=n(o[a]);t[d].references--}for(var l=i(e,r),c=0;c<o.length;c++){var u=n(o[c]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}o=l}}},659:e=>{var t={};e.exports=function(e,n){var i=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,n)=>{e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var r=void 0!==n.layer;r&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,r&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),t.styleTagTransform(i,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function n(i){var r=t[i];if(void 0!==r)return r.exports;var o=t[i]={id:i,exports:{}};return e[i](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var i in t)n.o(t,i)&&!n.o(e,i)&&Object.defineProperty(e,i,{enumerable:!0,get:t[i]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.nc=void 0;var i={};(()=>{n.d(i,{ni:()=>M,_W:()=>I});var e=n(72),t=n.n(e),r=n(825),o=n.n(r),a=n(659),d=n.n(a),l=n(56),c=n.n(l),u=n(540),s=n.n(u),p=n(113),m=n.n(p),A=n(208),b={};b.styleTagTransform=m(),b.setAttributes=c(),b.insert=d().bind(null,"head"),b.domAPI=o(),b.insertStyleElement=s(),t()(A.A,b),A.A&&A.A.locals&&A.A.locals;class f{constructor(e){this.title=e}library=[];container=document.createElement("div");print(){let e=document.createElement("div");e.innerHTML=this.title,container.appendChild(e),projectscontainer.appendChild(container)}}class h{constructor(e,t,n,i,r){this.name=e,this.description=t,this.duedate=n,this.duedatetime=i,this.priority=r}array(){return{name:this.name,description:this.description,duedate:this.duedate,duedatetime:this.duedatetime,priority:this.priority}}}function C(){let e=document.createElement("div");e.setAttribute("id","appcontainer"),document.body.appendChild(e)}function g(){let e=document.createElement("div");e.setAttribute("id","containerall"),localStorage.setItem("projectslib",JSON.stringify(B)),console.log(B),B.map((function(t,n,i){let r=document.createElement("div");r.setAttribute("id","taskcontainer");let o=document.createElement("div");o.setAttribute("id","titlecontainer");let a=document.createElement("div");a.innerHTML=t.title,o.appendChild(a),e.appendChild(o);let d=document.createElement("button");d.setAttribute("type","button"),d.onclick=function(){i.splice(n,1),localStorage.setItem("projectslib",JSON.stringify(B)),g(),M()},d.innerHTML="Delete Project",d.setAttribute("id","deleteproject"),d.setAttribute("class","deleteproject"),o.appendChild(d),localStorage.setItem("taskslib",t.library),t.library.map((function(t,n,i){let o=document.createElement("button");o.setAttribute("type","button"),o.onclick=function(){i.splice(n,1),localStorage.setItem("projectslib",JSON.stringify(B)),g(),M()},o.innerHTML="Delete Task",o.setAttribute("id","deletetask"),o.setAttribute("class","deletetask");let a=document.createElement("div");a.setAttribute("id","singlecontainer");let d=document.createElement("div"),l=document.createElement("div"),c=document.createElement("div"),u=document.createElement("div"),s=document.createElement("div");d.innerHTML="Task Name: "+t.name,l.innerHTML="Description: "+t.description,c.innerHTML="Due on: "+t.duedate,u.innerHTML=t.duedatetime,s.innerHTML="Priority: "+t.priority,a.appendChild(d),a.appendChild(l),a.appendChild(c),a.appendChild(u),a.appendChild(s),a.appendChild(o),r.appendChild(a),e.appendChild(r),function(e){"high"==e.priority?a.style.backgroundColor="red":"medium"==e.priority?a.style.backgroundColor="yellow":a.style.backgroundColor="green"}(t)}))})),k.innerHTML="",k.appendChild(e),document.getElementById("appcontainer").appendChild(k)}function y(){document.body.innerHTML="",C(),T(),g(),localStorage.setItem("Folder1",document.getElementById("appcontainer").innerHTML),M()}function v(){let e=document.querySelector('input[name="priority"]:checked'),t=document.getElementById("title"),n=document.getElementById("description"),i=document.getElementById("deadline"),r=document.getElementById("deadlinetime"),o=new h(t.value,n.value,i.value,r.value,e.id);return I=o.array(),E.library.push(I),I}let E,I,B=[],k=document.createElement("div");function T(){document.body.innerHTML="";let e=document.createElement("form"),t=document.createElement("label"),n=document.createElement("input"),i=document.createElement("div");i.setAttribute("id","titlecontainer"),n.setAttribute("name","title1"),n.setAttribute("id","title1"),t.setAttribute("for","title1"),t.innerText="Project Name: ";let r=document.createElement("button");r.setAttribute("id","createtaskbutt"),r.innerHTML="+ Project",i.appendChild(t),i.appendChild(n),e.appendChild(i),r.setAttribute("type","button"),r.onclick=function(){E=new f(document.getElementById("title1").value),console.log(E),k.setAttribute("id","allprojectcontainer"),document.getElementById("appcontainer").appendChild(k),B.push(E),function(){let e=document.getElementById("title1"),t=document.createElement("div");t.setAttribute("id","projectitle"),t.innerHTML=e.value,document.body.innerHTML="";let n=document.createElement("div");n.setAttribute("id","formcontainer");let i=document.createElement("div");i.innerHTML="New Task",i.setAttribute("id","formtitle"),n.appendChild(i);let r=document.createElement("form");r.setAttribute("id","form");let o=document.createElement("div"),a=document.createElement("label"),d=document.createElement("input");d.setAttribute("name","title"),d.setAttribute("id","title"),a.setAttribute("for","title"),a.innerText="Task Name: ",o.appendChild(a),o.appendChild(d);let l=document.createElement("div");l.setAttribute("id","discriptioncontainer");let c=document.createElement("label"),u=document.createElement("input");u.setAttribute("name","description"),u.setAttribute("id","description"),c.setAttribute("for","description"),c.innerHTML="Description :",l.appendChild(c),l.appendChild(u);let s=document.createElement("div");s.setAttribute("id","deadlinecontainer");let p=document.createElement("label"),m=document.createElement("input");m.setAttribute("name","deadline"),m.setAttribute("id","deadline"),m.setAttribute("type","date");let A=document.createElement("input");A.setAttribute("name","deadlinetime"),A.setAttribute("id","deadlinetime"),A.setAttribute("type","time"),p.setAttribute("for","deadline"),p.innerHTML="Deadline",s.appendChild(p),s.appendChild(m),s.appendChild(A);let b=document.createElement("div");b.setAttribute("id","prioritycontainer");let f=document.createElement("div");f.setAttribute("id","prioritytitle"),f.innerHTML="Priority";let h=document.createElement("label"),C=document.createElement("input");C.setAttribute("type","radio"),C.setAttribute("class","priority"),C.setAttribute("name","priority"),C.setAttribute("id","high"),h.setAttribute("for","high"),h.innerHTML="High";let g=document.createElement("label"),E=document.createElement("input");E.setAttribute("type","radio"),E.setAttribute("class","priority"),E.setAttribute("name","priority"),E.setAttribute("id","medium"),g.setAttribute("for","medium"),g.innerHTML="Medium";let I=document.createElement("label"),B=document.createElement("input");B.setAttribute("type","radio"),B.setAttribute("id","low"),B.setAttribute("class","priority"),B.setAttribute("name","priority"),I.setAttribute("for","low"),I.innerHTML="Low";let k=document.createElement("div"),T=document.createElement("div"),M=document.createElement("div");k.setAttribute("id","highcontainer"),T.setAttribute("id","mediumcontainer"),M.setAttribute("id","lowcontainer"),k.appendChild(h),k.appendChild(C),T.appendChild(g),T.appendChild(E),M.appendChild(I),M.appendChild(B),b.appendChild(f),b.appendChild(k),b.appendChild(T),b.appendChild(M);let w=document.createElement("button");w.innerHTML="Create Task",w.setAttribute("type","button");let L=document.createElement("button");L.setAttribute("type","button"),L.innerHTML="Submit Project",w.onclick=v,L.onclick=y,r.appendChild(o),r.appendChild(l),r.appendChild(s),r.appendChild(b),r.appendChild(w),r.appendChild(L),n.appendChild(r),document.body.appendChild(t),document.body.appendChild(n)}()},e.appendChild(r),document.body.appendChild(e);let o=document.createElement("div");o.setAttribute("id","appcontainer"),document.body.appendChild(o)}function M(){document.getElementsByClassName("deleteproject").onclick=function(){document.getElementById("containerall").innerHTML=""},document.getElementsByClassName("deletetask").onclick=function(){document.getElementById("singlecontainer").innerHTML=""}}setTimeout(M),T(),C(),function(){let e=document.createElement("div");e.setAttribute("id","containerall"),B=JSON.parse(localStorage.getItem("projectslib"))||[],B.map((function(t,n,i){let r=document.createElement("div");r.setAttribute("id","taskcontainer");let o=document.createElement("div");o.setAttribute("id","titlecontainer");let a=document.createElement("div");a.innerHTML=t.title,o.appendChild(a),e.appendChild(o);let d=document.createElement("button");d.setAttribute("type","button"),d.onclick=function(){i.splice(n,1),localStorage.setItem("projectslib",JSON.stringify(B)),printprojects(),M()},d.innerHTML="Delete Project",d.setAttribute("id","deleteproject"),d.setAttribute("class","deleteproject"),o.appendChild(d),localStorage.setItem("taskslib",t.library),t.library.map((function(t,n,i){let o=document.createElement("button");o.setAttribute("type","button"),o.onclick=function(){i.splice(n,1),localStorage.setItem("projectslib",JSON.stringify(B)),M()},o.innerHTML="Delete Task",o.setAttribute("id","deletetask"),o.setAttribute("class","deletetask");let a=document.createElement("div");a.setAttribute("id","singlecontainer");let d=document.createElement("div"),l=document.createElement("div"),c=document.createElement("div"),u=document.createElement("div"),s=document.createElement("div");d.innerHTML="Task Name: "+t.name,l.innerHTML="Description: "+t.description,c.innerHTML="Due on: "+t.duedate,u.innerHTML=t.duedatetime,s.innerHTML="Priority: "+t.priority,a.appendChild(d),a.appendChild(l),a.appendChild(c),a.appendChild(u),a.appendChild(s),a.appendChild(o),r.appendChild(a),e.appendChild(r),function(e){"high"==e.priority?a.style.backgroundColor="red":"medium"==e.priority?a.style.backgroundColor="yellow":a.style.backgroundColor="green"}(t)}))})),k.innerHTML="",k.appendChild(e),document.getElementById("appcontainer").appendChild(k)}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,